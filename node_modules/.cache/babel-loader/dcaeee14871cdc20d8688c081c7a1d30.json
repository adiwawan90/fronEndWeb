{"ast":null,"code":"import _defineProperty from \"/home/adi/Documents/BABA/simple-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/adi/Documents/BABA/simple-app/src/Context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubtotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotal();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = id => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increase = id => {\n      let tempCart = [...this.state.cart];\n      const selectProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotal();\n      });\n    };\n\n    this.decrease = id => {\n      let tempCart = [...this.state.cart];\n      const selectProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem();\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotal();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removeProduct = tempProducts[index];\n      removeProduct.inCart = false;\n      removeProduct.count = 0;\n      removeProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotal();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotal();\n      });\n    };\n\n    this.addTotal = () => {\n      let subtotal = 0;\n      this.state.cart.map(item => subtotal += item.total);\n      const tempTax = subtotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subtotal + tax;\n      this.setState(() => {\n        return {\n          cartSubtotal: subtotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increase: this.increase,\n        decrease: this.decrease,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/adi/Documents/BABA/simple-app/src/Context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubtotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotal","openModal","closeModal","increase","tempCart","selectProduct","decrease","removeItem","filter","removeProduct","clearCart","subtotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  //  membuat state untuk menamping isi store detail\n  state = {\n    products: [],\n    detailProduct: detailProduct,\n    cart: [],\n    modalOpen: false,\n    modalProduct: detailProduct,\n    cartSubtotal: 0,\n    cartTax: 0,\n    cartTotal: 0,\n\n  };\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  setProducts = () => {\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item };\n      tempProducts = [...tempProducts, singleItem];\n    });\n    this.setState(() => {\n      return { products: tempProducts };\n    });\n  };\n\n  getItem = id => {\n    const product = this.state.products.find(item => item.id === id);\n    return product;\n  };\n\n  //  handle detail, untuk cesk\n  handleDetail = id => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return { detailProduct: product };\n    });\n  };\n  addToCart = id => {\n    let tempProducts = [...this.state.products];\n    const index = tempProducts.indexOf(this.getItem(id));\n    const product = tempProducts[index];\n    product.inCart = true;\n    product.count = 1;\n    const price = product.price;\n    product.total = price;\n    this.setState(() => {\n      return { products: tempProducts, cart: [...this.state.cart, product] };\n    },\n    () => {\n      this.addTotal()\n    }\n    )\n  };\n  openModal = id => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return { modalProduct: product, modalOpen: true };\n    });\n  };\n  closeModal = id => {\n    this.setState(() => {\n      return { modalOpen: false };\n    });\n  };\n  increase = id => {\n    let tempCart = [...this.state.cart];\n    const selectProduct = tempCart.find(item => item.id === id)\n    const index = tempCart.indexOf(selectProduct);\n    const product = tempCart[index];\n\n    product.count = product.count + 1;\n    product.total = product.count * product.price;\n\n    this.setState(() =>{\n      return {cart: [...tempCart]}\n    },()=>{\n      this.addTotal();\n    })\n  }\n  decrease = id => {\n    let tempCart = [...this.state.cart];\n    const selectProduct = tempCart.find(item => item.id === id)\n    const index = tempCart.indexOf(selectProduct);\n    const product = tempCart[index];\n\n    product.count = product.count - 1;\n    if(product.count === 0){\n      this.removeItem()\n    }else{\n      product.total = product.count * product.price;\n      this.setState(() =>{\n        return {cart: [...tempCart]}\n      },()=>{\n        this.addTotal();\n      }) \n    }\n\n  }\n  removeItem = id => {\n    let tempProducts = [...this.state.products];\n    let tempCart = [...this.state.cart];\n\n    tempCart = tempCart.filter(item => item.id !== id);\n\n    const index = tempProducts.indexOf(this.getItem(id));\n    let removeProduct = tempProducts[index];\n    removeProduct.inCart = false;\n    removeProduct.count = 0;\n    removeProduct.total =  0;\n    \n    this.setState(() => {\n      return {\n        cart: [...tempCart],\n        products: [...tempProducts]\n      };\n    },() => {\n      this.addTotal();\n    })\n\n  }\n  clearCart = () => {\n   this.setState(() =>{\n     return {cart: []}\n   },() => {\n    this.setProducts();\n    this.addTotal();\n   })\n  }\n  addTotal = () => {\n    let subtotal= 0\n    this.state.cart.map(item => (subtotal += item.total))\n    const tempTax = subtotal * 0.1\n    const tax = parseFloat(tempTax.toFixed(2))\n    const total = subtotal + tax\n    this.setState(() => {\n      return {\n        cartSubtotal: subtotal,\n        cartTax: tax,\n        cartTotal: total\n      }\n    })\n  }\n\n  render() {\n    return (\n      <ProductContext.Provider\n        value={{\n          ...this.state,\n          handleDetail: this.handleDetail,\n          addToCart: this.addToCart,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n          increase: this.increase,\n          decrease: this.decrease,\n          removeItem: this.removeItem,\n          clearCart: this.clearCart\n        }}\n      >\n        {this.props.children}\n      </ProductContext.Provider>\n    );\n  }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };\n"]},"metadata":{},"sourceType":"module"}